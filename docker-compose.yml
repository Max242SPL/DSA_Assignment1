services:
  # Infrastructure Services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: transport_db
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  # Microservices
  passenger-service:
    build:
      context: ./passenger-service
      dockerfile: Dockerfile
    container_name: passenger-service
    ports:
      - "8081:8081"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/transport_db?authSource=admin
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - mongodb
      - kafka

  transport-service:
    build:
      context: ./transport-service
      dockerfile: Dockerfile
    container_name: transport-service
    ports:
      - "8082:8082"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/transport_db?authSource=admin
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - mongodb
      - kafka

  ticketing-service:
    build:
      context: ./ticketing-service
      dockerfile: Dockerfile
    container_name: ticketing-service
    ports:
      - "8083:8083"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/transport_db?authSource=admin
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - mongodb
      - kafka

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8084:8084"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/transport_db?authSource=admin
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - mongodb
      - kafka

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8085:8085"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/transport_db?authSource=admin
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - mongodb
      - kafka

  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    container_name: admin-service
    ports:
      - "8086:8086"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/transport_db?authSource=admin
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - mongodb
      - kafka

volumes:
  mongodb_data:
